[package]
name = "vanity_gpg"
version = "0.3.2"
edition = "2021"
authors = ["Kay Lin <i@v2bv.net>"]
description = "A simple tool for generating and filtering vanity GPG keys, c0nCurr3nt1Y"
homepage = "https://github.com/RedL0tus/VanityGPG"
repository = "https://github.com/RedL0tus/VanityGPG"
keywords = [ "GPG", "Vanity", "VanityGPG" ]
readme = "README.md"
license = "MIT"
categories = [ "command-line-utilities" ]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = [ "sequoia" ]
sequoia = [ "sequoia-openpgp", "nettle" ]
rpgp = [ "pgp", "rand", "chrono", "smallvec", "sha-1" ]
msa = []

[dev-dependencies]
hex = "^0.4"

[build-dependencies]
cc = "1.0"

[dependencies]
log = { version = "^0.4", features = [ "std" ] }
pgp = { version = "^0.7", optional = true }
clap = { version = "^3.1", features = [ "derive" ] }
rand = { version = "^0.7", optional = true }
rayon = "^1.5"
regex = "^1.5"
anyhow = "^1.0"
chrono = { version = "^0.4", optional = true }
nettle = { version = "^7.2", optional = true }
colored = "^2.0"
mimalloc = { version = "^0.1", default-features = false }
smallvec = { version = "^1.8", optional = true }
backtrace = "^0.3"
byteorder = "^1.4"
indicatif = "^0.16"
thiserror = "^1.0"
sequoia-openpgp = { version = "^1.9", optional = true }

[target.'cfg(any(target_arch = "aarch64", target_arch = "x86_64"))'.dependencies]
sha-1 = { version = "^0.10", features = [ "asm", "compress" ], optional = true }

[target.'cfg(not(any(target_arch = "aarch64", target_arch = "x86_64")))'.dependencies]
sha-1 = { version = "^0.10", features = [ "compress" ], optional = true }

[profile.test]
opt-level = 3
debug = true
debug-assertions = false
overflow-checks = false

[profile.release]
opt-level = 3
debug = true
debug-assertions = false
overflow-checks = false
lto = true
panic = 'unwind'
incremental = false
codegen-units = 1
rpath = false
